<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:util="http://www.springframework.org/schema/util"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop 
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/mvc  
        http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util-2.0.xsd">
        
        <!--  引入spring_mybatis.xml  -->
        <import resource="classpath:config/spring-mybatis.xml"/>
        <!--  扫描包路径:多个包使用逗号隔开  -->
        <context:component-scan base-package="com.jm" annotation-config="true"></context:component-scan>
        <!--  配置mvc的注解驱动  -->
        <mvc:annotation-driven/>
        <!-- 配置AOP的注解驱动 -->
        <aop:aspectj-autoproxy proxy-target-class="true"/>
        <!--  静态资源不被拦截  -->
        <mvc:default-servlet-handler/>
        <mvc:resources location="/js/" mapping="/js/**"></mvc:resources>
        <!--  映射器作用:请求的URL和Bean名字映射  -->
          <bean class="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping"></bean>
    <!-- 适配器作用:鉴别项目Bean可以作为Spring Web MVC中的处理器-->
  <bean class="org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter"></bean>
  <!-- 视图解析器 -->
  <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
    <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>  
    <property name="prefix" value="/WEB-INF/pages/"/>  
    <property name="suffix" value=".jsp"/>  
     <!-- 解析器的优先级别 -->
     <property name="order" value="1"/>
  </bean>


		<!-- 定义全局异常 -->
		<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		   <property name="exceptionMappings">
		      <props>
		         <prop key="org.apache.shiro.authz.UnauthorizedException">error/403</prop>  
		       <!--   <prop key="java.lang.Throwable">error/500</prop> -->
		      </props>
		   	</property>
		</bean>
			
	
	
        <!--  文件解析器  -->
        <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="UTF-8"/>
        <!--指定所上传文件的总大小不能超过1mB。注意maxUploadSize属性的限制不是针对单个文件，而是所有文件的容量之和 -->
        <property name="maxUploadSize" value="11048576"/>
        </bean>
        
        <!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
        
         <!-- 开启shiro的注解支持 -->  
	<bean id="defaultAdvisorAutoProxyCreator" class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
	 depends-on="lifecycleBeanPostProcessor">  
    		<!-- 必须改为true，即使用cglib方式为Action创建代理对象。默认值为false，使用JDK创建代理对象，会造成问题 -->  		
    <property name="proxyTargetClass" value="true"></property>  
	</bean>   
	
			<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
  		<property name="securityManager" ref="securityManager"/>
		</bean>
        
        
        <!--  json数据类型转换  -->
        <bean id="mappingJackson2HttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">    
            <property name="supportedMediaTypes">    
                <list>    
                    <value>text/html;charset=UTF-8</value>    
                    <value>text/json;charset=UTF-8</value>    
                    <value>application/json;charset=UTF-8</value>    
                </list>
            </property>
        </bean>
        <!--  注解适配器：响应体  -->
        <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">    
            <property name="messageConverters">
                <list>    
                    <ref bean="mappingJackson2HttpMessageConverter" />    
                </list>
            </property>
        </bean>
        
        <bean id="calcSchedule" class="com.jm.schedule.CalcSchedule"></bean>
        <!-- <util:properties id="setting" location="classpath:config/setting.properties" >
        </util:properties> -->
        <!-- <context:property-placeholder location="classpath:config/*.properties" file-encoding="UTF-8"/> -->
        <bean id="setting" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
            <property name="location" value="classpath:config/setting.properties"/>
            <property name="fileEncoding" value="UTF-8"/>
        </bean>
        </beans>