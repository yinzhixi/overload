<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop 
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/mvc  
        http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">
        
        <!--  引入spring_mybatis.xml  -->
        <import resource="classpath:config/spring-mybatis.xml"/>
        
        <!-- <mvc:resources location="/css/" mapping="/css/**"></mvc:resources>
		<mvc:resources location="/images/" mapping="/images/**"></mvc:resources>
		<mvc:resources location="/error/" mapping="/error/**"></mvc:resources>
		<mvc:resources location="/js/" mapping="/js/**"></mvc:resources>
		<mvc:resources location="/json/" mapping="/json/**"></mvc:resources>
		<mvc:resources location="/layui/" mapping="/layui/**"></mvc:resources>
		<mvc:resources location="/login/" mapping="/login/**"></mvc:resources>
		<mvc:resources location="/static/" mapping="/static/**"></mvc:resources> -->
		
        <!--  扫描包路径:多个包使用逗号隔开  -->
        <context:component-scan base-package="com.jm"></context:component-scan>
        <!-- 配置AOP的注解驱动 -->
        <aop:aspectj-autoproxy></aop:aspectj-autoproxy>
        <!--  配置mvc的注解驱动  -->
        <mvc:annotation-driven/>
        <!--  静态资源不被拦截  -->
        <mvc:default-servlet-handler/>
        
        <!--  映射器作用:请求的URL和Bean名字映射  -->
          <bean class="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping"></bean>
          
    <!-- 适配器作用:鉴别项目Bean可以作为Spring Web MVC中的处理器-->
      <bean class="org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter"></bean>
      
  <!-- 视图解析器 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
          <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>  
          <property name="prefix" value="/WEB-INF/pages/"/>  
          <property name="suffix" value=".jsp"/>  
          <!-- 解析器的优先级别 -->
          <property name="order" value="0"/>
    </bean>

        <!--  文件解析器  -->
        <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
               <property name="defaultEncoding" value="UTF-8"/>
           <!--指定所上传文件的总大小不能超过1mB。注意maxUploadSize属性的限制不是针对单个文件，而是所有文件的容量之和 -->
               <property name="maxUploadSize" value="11048576"/>
        </bean>
        
        <!--  json数据类型转换  -->
        <bean id="mappingJackson2HttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">    
            <property name="supportedMediaTypes">    
                <list>    
                    <value>text/html;charset=UTF-8</value>    
                    <value>text/json;charset=UTF-8</value>    
                    <value>application/json;charset=UTF-8</value>    
                </list>    
            </property>    
        </bean>
        <!--  注解适配器：响应体  -->
        <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">    
            <property name="messageConverters">
                <list>    
                    <ref bean="mappingJackson2HttpMessageConverter" />    
                </list>    
            </property>    
        </bean> 
        
        
    	<!-- ***shiro配置*** -->
	<!-- <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager"/>注入shiro安全管理器
		<property name="filterChainDefinitions">filter的过滤链
			<value>
			排除的静态资源
				/adm/login.do=anon
				/adm/logout.do=logout
				/admin/**=anon
				/css/**=anon
				/js/**=anon
				/picture/**=anon
				/static/**=anon
				/userpicture/**=anon
				/image.jpg=anon
				/**=authc
			</value>
		</property>
	</bean>
***shiro的安全管理器***
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="realm"/>	将realm注入至安全管理器中
	</bean>
	
***自定义的realm***
	<bean id="realm" class="com.jm.myRealm.Realm">
		<property name="credentialsMatcher" ref="credentialsMatcher"/>
		<property name="authorizationCachingEnabled" value="true" />	配置权限信息缓存
		<property name="authorizationCacheName" value="authorizationCache"/>	缓存配置的名字
	</bean>
	
***凭证匹配器***
	<bean id="credentialsMatcher" class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
		<property name="hashIterations" value="1024"/>	加密次数
		<property name="hashAlgorithmName" value="MD5"/>	加密策略
	</bean> -->
    
        </beans>